- name: Get a ticket
  ansible.builtin.uri:
    url: "https://{{ proxmox_ip }}:8006/api2/json/access/ticket"
    method: POST
    return_content: true
    body_format: form-urlencoded
    status_code: 200
    validate_certs: false
    body:
      username: "{{ proxmox_username }}"
      password: "{{ proxmox_password }}"
  register: proxmox_ticket

- name: Check if portainer  VM exists
  ansible.builtin.uri:
    url: "https://{{ proxmox_ip }}:8006/api2/json/nodes/{{ proxmox_node }}/qemu/{{ portainer_vm_id }}/status/current"
    method: GET
    status_code: 200, 500
    body_format: form-urlencoded
    validate_certs: false
    headers:
      Cookie: PVEAuthCookie={{ (proxmox_ticket.content | from_json).data.ticket }}
      CSRFPreventionToken: "{{ (proxmox_ticket.content | from_json).data.CSRFPreventionToken }}"
  register: portainer_exist_result

- name: Clone a cloud-init VM if portainer VM doesn't exists
  ansible.builtin.uri:
    url: "https://{{ proxmox_ip }}:8006/api2/json/nodes/{{ proxmox_node }}/qemu/{{ cloud_init_vm_id }}/clone"
    method: POST
    status_code: 200
    body_format: form-urlencoded
    validate_certs: false
    headers:
      Cookie: PVEAuthCookie={{ (proxmox_ticket.content | from_json).data.ticket }}
      CSRFPreventionToken: "{{ (proxmox_ticket.content | from_json).data.CSRFPreventionToken }}"
    body:
      name: "{{ portainer_vm_name }}"
      newid: "{{ portainer_vm_id }}"
      full: 1
  when: portainer_exist_result.status != 200

- name: Wait untill VM is cloned
  ansible.builtin.uri:
    url: "https://{{ proxmox_ip }}:8006/api2/json/nodes/{{ proxmox_node }}/qemu/{{ portainer_vm_id }}/status/current"
    method: GET
    status_code: 200
    body_format: form-urlencoded
    validate_certs: false
    headers:
      Cookie: PVEAuthCookie={{ (proxmox_ticket.content | from_json).data.ticket }}
  register: portainer_vm_status
  until: portainer_vm_status.json.data.lock is not defined
  retries: 15
  delay: 30
  when: portainer_exist_result.status != 200

- name: Change Portainer VM network settings and resources
  ansible.builtin.uri:
    url: "https://{{ proxmox_ip }}:8006/api2/json/nodes/{{ proxmox_node }}/qemu/{{ portainer_vm_id }}/config"
    method: POST
    status_code: 200
    body_format: form-urlencoded
    validate_certs: false
    headers:
      Cookie: PVEAuthCookie={{ (proxmox_ticket.content | from_json).data.ticket }}
      CSRFPreventionToken: "{{ (proxmox_ticket.content | from_json).data.CSRFPreventionToken }}"
    body:
      vcpus: '2'
      cores: '2'
      memory: '6000'
      ipconfig0: 'gw={{ portainer_gateway }},ip={{ portainer_ip_changeto }}/24'
  when: portainer_exist_result.status != 200

- name: Increase Portainer VM disk size
  ansible.builtin.uri:
    url: "https://{{ proxmox_ip }}:8006/api2/json/nodes/{{ proxmox_node }}/qemu/{{ portainer_vm_id }}/resize"
    method: PUT
    status_code: 200
    body_format: form-urlencoded
    validate_certs: false
    headers:
      Cookie: PVEAuthCookie={{ (proxmox_ticket.content | from_json).data.ticket }}
      CSRFPreventionToken: "{{ (proxmox_ticket.content | from_json).data.CSRFPreventionToken }}"
    body:
      disk: "scsi0"
      size: "+50G"
  when: portainer_exist_result.status != 200

- name: Start a portainer VM
  ansible.builtin.uri:
    url: "https://{{ proxmox_ip }}:8006/api2/json/nodes/{{ proxmox_node }}/qemu/{{ portainer_vm_id }}/status/start"
    method: POST
    status_code: 200, 500
    body_format: form-urlencoded
    validate_certs: false
    headers:
      Cookie: PVEAuthCookie={{ (proxmox_ticket.content | from_json).data.ticket }}
      CSRFPreventionToken: "{{ (proxmox_ticket.content | from_json).data.CSRFPreventionToken }}"

- name: Wait untill portainer gets an IP
  ansible.builtin.uri:
    url: "https://{{ proxmox_ip }}:8006/api2/json/nodes/{{ proxmox_node }}/qemu/{{ portainer_vm_id }}/agent/network-get-interfaces"
    method: GET
    status_code: 200, 500
    body_format: form-urlencoded
    validate_certs: false
    headers:
      Cookie: PVEAuthCookie={{ (proxmox_ticket.content | from_json).data.ticket }}
      CSRFPreventionToken: "{{ (proxmox_ticket.content | from_json).data.CSRFPreventionToken }}"
  register: portainer_interface
  until: "portainer_interface.json | json_query(json_query_var) != None"
  retries: 15
  delay: 20
  vars:
# TODO: Index of the IPv4 is hardcoded here, couldn't figure out escaping hyphens
    json_query_var: data.result[?name=='eth0']."ip-addresses"[0]."ip-address"

- name: Wait for SSH service to start
  ansible.builtin.wait_for:
    host: "{{ portainer_interface.json | json_query(json_query_var) }}"
    port: 22
  vars:
# TODO: Index of the IPv4 is hardcoded here, couldn't figure out escaping hyphens
    json_query_var: data.result[?name=='eth0']."ip-addresses"[0]."ip-address" | [0]

- name: Return a proxmox VM IP
  ansible.builtin.debug:
    msg: "{{ portainer_interface.json | json_query(json_query_var) }}"
  vars:
# TODO: Index of the IPv4 is hardcoded here, couldn't figure out escaping hyphens
    json_query_var: data.result[?name=='eth0']."ip-addresses"[0]."ip-address" | [0]
