---
- name: Include portainer secrets variables
  ansible.builtin.include_vars:
    file: secret.configs.yml

- name: Include portainer secrets variables
  ansible.builtin.include_vars:
    file: secret.compose_settings.yml

- name: Include portainer secrets variables
  ansible.builtin.include_vars:
    file: secret.portainer_installation.yml

# TODO: Refactor so token gets pulled only when it's absent

- name: Get a token if needed
  ansible.builtin.uri:
    url: "https://{{ portainer_ip }}:{{ portainer_port }}/api/auth"
    method: POST
    return_content: true
    body_format: json
    status_code: 200
    validate_certs: false
    body:
      Username: "{{ portainer_username }}"
      Password: "{{ portainer_password }}"
  register: auth_token

# TODO: Add an algorithm to look for ID

- name: Create a list of all containers
  ansible.builtin.uri:
    url: "https://{{ portainer_ip }}:{{ portainer_port }}/api/endpoints/{{ portainer_endpoint_id }}/docker/containers/json"
    method: GET
    validate_certs: false
    return_content: true
    status_code: 200
    headers:
      Authorization: Bearer {{ (auth_token.content | from_json).jwt }}
  register: container_list

- name: Extract container names and their paths
  ansible.builtin.set_fact:
    containers: "{{ container_list.json | json_query(json_query_var) }}"
  vars:
    json_query_var: "[*].{Name: Names[0], Path: Mounts[?contains(Source, '/var/lib')].Source | [0]}"

# TODO: By sheer luck container names contains the slash in them which I can you to construct a path, \
# so I don't need to regex it out, TBD fix it or not

- name: Add a path to each container's corresponding config file
  ansible.builtin.set_fact:
    containers_and_paths: "{{ containers_and_paths | default([]) \
     + [{'container': item.Name, 'path': item.Path, 'files': lookup('fileglob', 'templates/configs' + item.Name + '/*').split(',')}] }}"
  loop: "{{ containers }}"
  when: lookup('fileglob', 'templates/configs' + item.Name + '/*') | length > 0

- name: Template all files in the Docker volume
  ansible.builtin.template:
    src: "{{ item.1 }}"
    dest: "{{ item.0.path }}/{{ item.1 | basename | regex_replace('.j2$', '')}}"
    owner: root
    group: admin
    mode: '0644'
  loop: "{{ containers_and_paths | subelements('files', 'skip_missing=True') }}"
