services:
  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    ports:
      - 3100:3100
    networks:
      - monitoring
    command: -config.file=/etc/loki/local-config.yaml

  mktxp:
    image: ghcr.io/akpw/mktxp:latest
    container_name: mktxp
    restart: unless-stopped 
    user: root
    volumes:
      - mktxp:/root/mktxp/
    networks:
      - monitoring
      
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9044:9090
    volumes:
      - prometheus:/prometheus  
    networks:
      - monitoring
      - proxy
    command:
      - --config.file=/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.{{ domain }}`)"
      - "traefik.http.routers.prometheus.middlewares=allow-internal-only@docker"
      - "traefik.http.routers.prometheus.entrypoints=https"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.tls=true"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3651:3000
    depends_on:
      - prometheus
      - loki
    volumes:
      - grafana:/var/lib/grafana
    networks:
      - monitoring
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.grafana.rule=Host(`grafana.{{ domain }}`)"
      - "traefik.http.routers.grafana.entrypoints=https"
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.middlewares=authelia@file"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro # Disk metrics collection
    networks:
      - monitoring
    command:
      - --housekeeping_interval=10s
      - --docker_only=true
      - --store_container_labels=false
    devices:
      - /dev/kmsg 
      
  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points="^/(sys|proc|dev|host|etc)($|/)"

volumes:
  grafana:
    external: true
  prometheus:
    external: true
  mktxp:
    external: true

networks:
  monitoring:
    external: true
  proxy:
    external: true