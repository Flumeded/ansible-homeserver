# Invidous Can't be directly deployed without cloning first, so leaving this as is for now
services:
  invidious:
    image: quay.io/invidious/invidious:master
    container_name: invidious
    restart: unless-stopped
    ports:
      - 3005:3005
    networks:
      - proxy
      - invidious
    environment:
      INVIDIOUS_CONFIG: |
        db:
          dbname: invidious
          user: {{ invidious_db_username }}
          password: {{ invidious_db_password }}
          host: invidious-db
          port: 5432
        check_tables: true
        port: 3005
        external_port: 443
        domain: yt.{{ domain }}
        https_only: true
        hmac_key: {{ invidious_hmac }}
        signature_server: inv_sig_helper:12999
        # visitor_data: 
        # po_token: 
      test: wget -nv --tries=1 --spider http://0.0.0.0:3005/api/v1/trending || exit 1
      interval: 30s
      timeout: 5s
      retries: 2
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.invidious.rule=Host(`yt.{{ domain }}`)"
      - "traefik.http.routers.invidious.entrypoints=https"
      - "traefik.http.routers.invidious.service=invidious"
      - "traefik.http.services.invidious.loadbalancer.server.port=3005"
      - "traefik.http.routers.invidious.tls=true"
      - "traefik.http.routers.invidious.middlewares=default-headers@file"

  invidious-db:
    image: docker.io/library/postgres:14
    container_name: invidious_db
    restart: unless-stopped
    volumes:
      - postgresdata:/var/lib/postgresql/data
      - /home/flume/invidious/config/sql:/config/sql
      - /home/flume/invidious/docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    networks:
      - invidious
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: {{ invidious_db_username }}
      POSTGRES_PASSWORD: {{ invidious_db_password }}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]

  inv_sig_helper:
    container_name: inv-sig-helper
    image: quay.io/invidious/inv-sig-helper:latest
    command: ["--tcp", "0.0.0.0:12999"]
    environment:
    restart: unless-stopped
    cap_drop:
      - ALL
    networks:
      - invidious
    read_only: true
    security_opt:
      - no-new-privileges:true

volumes:
  postgresdata:
    external: true
networks:
  proxy:
    external: true
  invidious:
    external: true 